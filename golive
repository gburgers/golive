#!/bin/bash

set -e

PID_FILE=".server.pid"
export PID_FILE

cleanup() {
    if pgrep -f "./server" >/dev/null; then
        kill $(pgrep -f ".server")
        echo "Server gracefully stopped!"
        rm "$PID_FILE" 2>/dev/null
        return 0
    elif [ -f .server.pid ] && ps -p "$(<".server.pid")" >/dev/null 2>&1; then
        kill "$(<"$PID_FILE")"
        echo "Server gracefully killed!"
        rm "$PID_FILE" 2>/dev/null
        return 0
    else
        echo "No active server"
        return 0
    fi
}

build_templ() {
    if templ generate -path . && echo "Build Templ successfully"; then
        return 0
    else
        echo "Templ build failed!"
        return 1
    fi
}

build_app() {
    if
        main_path=$(fd main.go --type f --exclude vendor --exclude .git | head -n1)

        if [ -z "$main_path" ]; then
            echo "❌ Could not find main.go"
            echo "There is no main.go, waiting for changes..."
            return 1
        fi

        main_dir=$(dirname "$main_path")
        echo "Found main.go in $main_dir"
        echo "Building Go app..."

        # Build all .go files in that folder
        if go build -o ./server "$main_dir"/*.go && echo "✅ Build App successfully"; then
            :
        else
            echo "Building App Failed.., please fix it!"
            echo "Waiting for changes..."
            return 1
        fi
    then
        echo "Starting Go server..."
        ./server &

        # Check if the server was successfully started
        if [ $? -eq 0 ]; then
            echo "$!" >"$PID_FILE" && echo "Server runs on PID: $(<"$PID_FILE")"
        else
            echo "Failed to start server."
            exit 1
        fi
        echo "Waiting for changes..."
    else
        echo "App build failed!"
        exit 1
    fi
}

# Export functions to be available for 'entr'
export -f cleanup
export -f build_app
export -f build_templ

# Trap Ctrl+C (SIGINT) and terminal close (SIGHUP) signals
trap cleanup INT HUP

# Watch *.go and *.templ for changes and execute functions
entr -d bash -c 'cleanup && build_templ && build_app' <<<"$(fd -e go -e templ)"

wait

trap 'cleanup; exit 0' EXIT

